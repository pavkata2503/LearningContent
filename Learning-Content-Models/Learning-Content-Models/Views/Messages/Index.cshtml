@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using Learning_Content_Models.Models;
@using Learning_Content_Models.Service;
@using Learning_Content_Models.Service.IService;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Mvc;
@using System.Security.Claims;
@using Microsoft.DotNet.Scaffolding.Shared.Messaging
@using System.Text.RegularExpressions
@model IEnumerable<Learning_Content_Models.Models.Message>
@inject UserManager<ApplicationUser> UserManager
<html>
<head>
	<title></title>
	<link rel="stylesheet" href="/css/Messages.css" asp-append-version="true" />
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
	<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</head>
<body>
	@{
		var userId = User.Claims.FirstOrDefault(a => a.Type == ClaimTypes.NameIdentifier)?.Value;

		if (userId == null)
		{
			throw new ArgumentException("Invalid user.");
		}
		var user = await UserManager.FindByIdAsync(userId);
	}
	<style>
		.highlight {
			color: black;
			font-weight: bold;
		}

		.modal {
			text-align: center;
		}

		.modal-dialog {
			display: inline-block;
			text-align: left;
			vertical-align: middle;
		}

		.unread {
			opacity: 0.7; /* Променете стойностите на opacity, за да регулирате степента на затъмнение */
		}


		.media-body {
			display: flex;
			justify-content: space-between;
		}

		.filtaring {
			display: flex;
			margin-top: 20px;
			flex-direction: row;
			justify-content: space-evenly;
		}
	</style>

	<div class="filtaring">
		<div>
			<a asp-action="Index" asp-route-isRead="true" class="btn btn-primary">Прочетени</a>
			<a asp-action="Index" asp-route-isRead="false" class="btn btn-primary">Непрочетени</a>
		</div>
		@using (Html.BeginForm("Index", "Messages", FormMethod.Get))
		{
			<label for="receiver">Изпращач:</label>
			<input type="text" name="receiver" value="@ViewBag.Receiver" />
			<input type="submit" value="Търси" />
		}
		<input type="text" id="searchInput" placeholder="Търси по текст..." />
	</div>
	<main role="main" class="container">
		<div class="d-flex align-items-center p-3 my-3 text-white-50 bg-blue rounded box-shadow">
			<div class="lh-100">
				<h6 class="mb-0 text-white lh-100">@user.Name</h6>
				<small>Съобщения</small>
			</div>
		</div>

		<div class="my-3 p-3 bg-white rounded box-shadow">
			<h6 class="border-bottom border-gray pb-2 mb-0">Последни съобщения</h6>
			@foreach (var message in Model)
			{
				if (message.Receiver == user.Email || message.SenderEmail == user.Email)
				{
					<div class="media text-muted border-bottom pt-3 search">
						@if (message.Sender == user.Name)
						{
							<div class="media-body pb-1">
								<strong class="d-block text-gray-dark">От: Мен</strong>
								<!-- Button trigger modal -->
								<button type="button" class="btn btn-info btn-sm view-message" data-message-id="@message.Id" data-toggle="modal" data-target="#exampleModalLong-@message.Id">
									Прочети
								</button>
							</div>
							<div class="media-body pb-1">
								<span class="text">@message.Text</span>
								<form asp-action="Delete" asp-route-id="@message.Id" method="post"
									  onsubmit="return confirm('Are you sure you want to delete this movie?');">
									<button class="btn btn-danger btn-sm delete-message" type="submit">Изтрии</button>
								</form>
							</div>
						}
						else
						{
							<div class="media-body pb-1">
								<strong class="d-block text-gray-dark">От: @message.Sender</strong>
								<!-- Button trigger modal -->
								<button type="button" class="btn btn-info btn-sm view-message" data-message-id="@message.Id" data-toggle="modal" data-target="#exampleModalLong-@message.Id">
									Прочети
								</button>
							</div>

							<div class="media-body pb-1">
								<span class="text">@message.Text</span>
								<form asp-action="Delete" asp-route-id="@message.Id" method="post"
									  onsubmit="return confirm('Are you sure you want to delete this movie?');">
									<button class="btn btn-danger btn-sm delete-message" type="submit">Изтрии</button>
								</form>
							</div>
							@* <form asp-action="MarkAsRead" asp-route-id="@message.Id" method="post">
				<button type="submit" class="btn btn-sm btn-outline-secondary">Прочети</button>
				</form> *@
						}
					</div>
				}

				<!-- Modal -->
				<div class="modal fade" id="exampleModalLong-@message.Id" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle-@message.Id" aria-hidden="true">
					<div class="modal-dialog modal-dialog-centered" style="width:500px;">
						<div class="modal-content" style="height:500px;">
							<div class="modal-header">
								<h5 class="modal-title" id="exampleModalLongTitle">Съобщение</h5>
								<button type="button" class="close" data-dismiss="modal" aria-label="Close">
									<span aria-hidden="true">&times;</span>
								</button>
							</div>
							<div class="modal-body">
								<p><strong>Sender:</strong> @message.Sender, @message.SenderEmail</p>
								<p><strong>Date:</strong> @message.SendDate.ToShortDateString()</p>
								<hr>
								<p>@message.Text</p>
							</div>
							<div class="modal-footer">
								<button type="button" class="btn btn-secondary" data-dismiss="modal">Затвори</button>
							</div>
						</div>
					</div>
				</div>
			}
			<small class="d-block text-right mt-3">
				<a asp-action="Index">Всички съобщения</a>
			</small>
		</div>
	</main>
	<a asp-action="Add" asp-controller="Messages" class="btn btn-success mb-3">
		Добави
	</a>
</body>
<script>
	const searchInput = document.getElementById("searchInput");
	searchInput.addEventListener("input", function () {
		searchMessages(this);
	});

	function searchMessages(inputEl) {
		const query = inputEl.value.toLowerCase();
		const textEls = document.getElementsByClassName("text");
		const textElsDivs = document.getElementsByClassName("search");

		for (let i = 0; i < textEls.length; i++) {
			const el = textEls[i];
			const elText = el.innerText.toLowerCase();

			if (elText.includes(query)) {
				textElsDivs[i].style.display = "block";
				el.innerHTML = elText.replace(new RegExp(query, 'ig'), '<b style="color: black">$&</b>')
			} else {
				textElsDivs[i].style.display = "none";
			}
		}
	}
</script>
<script>
	$(document).ready(function () {
		$('.view-message').click(function () {
			var messageId = $(this).data('message-id');
			$.ajax({
				type: 'POST',
				url: '/Messages/MarkAsRead',
				data: { id: messageId },
				success: function () {
					// Не правим нищо тук, просто маркираме съобщението като прочетено
				},
				error: function () {
					alert('Възникна грешка при маркирането на съобщението като прочетено.');
				}
			});
		});
	});
</script>
</html>
