@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using Learning_Content_Models.Models;
@using Learning_Content_Models.Service;
@using Learning_Content_Models.Service.IService;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Mvc;
@using System.Security.Claims;
@using Microsoft.DotNet.Scaffolding.Shared.Messaging
@using System.Text.RegularExpressions
@model IEnumerable<Learning_Content_Models.Models.Message>
@inject UserManager<ApplicationUser> UserManager

@* @{
    string search = string.Empty;
    if (Model != null && Model.First().SearchQuery != null)
    {
        search = Model.First().SearchQuery;
    }

    // Function to highlight search keyword
    Func<string, IHtmlContent> HighlightSearchKeyword = (text) =>
    {
        if (!string.IsNullOrEmpty(search))
        {
            // Use regular expression to replace search keyword with highlighted span
            string pattern = $"({Regex.Escape(search)})";
            string highlightedText = Regex.Replace(text, pattern, "<span class='highlight'>$1</span>", RegexOptions.IgnoreCase);
            return new HtmlString(highlightedText);
        }
        return new HtmlString(text);
    };
} *@
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title></title>
	<link rel="stylesheet" href="/css/Messages.css" asp-append-version="true" />
</head>
<body>
	@{
		var userId = User.Claims.FirstOrDefault(a => a.Type == ClaimTypes.NameIdentifier)?.Value;

		if (userId == null)
		{
			throw new ArgumentException("Invalid user.");
		}
		var user = await UserManager.FindByIdAsync(userId);
	}
	<style>
		.highlight {
			color: black;
			font-weight: bold;
		}

		.unread {
    opacity: 0.7; /* Променете стойностите на opacity, за да регулирате степента на затъмнение */
}


		.media-body {
			display: flex;
			justify-content: space-between;
		}

		.filtaring {
			display: flex;
			flex-direction: row;
			justify-content: space-evenly;
		}
	</style>
	<div class="filtaring">
		<div>
			<a asp-action="Index" asp-route-isRead="true" class="btn btn-primary">View Read Messages</a>
			<a asp-action="Index" asp-route-isRead="false" class="btn btn-primary">View Unread Messages</a>
		</div>
		@using (Html.BeginForm("Index", "Messages", FormMethod.Get))
		{
			<label for="receiver">Created Name:</label>
			<input type="text" name="receiver" value="@ViewBag.Receiver" />
			<input type="submit" value="Filter" />
		}
		<input type="text" id="searchInput" placeholder="Search by title or genre..." />
	</div>
	<main role="main" class="container">
		<div class="d-flex align-items-center p-3 my-3 text-white-50 bg-blue rounded box-shadow">
			<div class="lh-100">
				<h6 class="mb-0 text-white lh-100">@user.Name</h6>
				<small>Съобщения</small>
			</div>
		</div>

		<div class="my-3 p-3 bg-white rounded box-shadow">
			<h6 class="border-bottom border-gray pb-2 mb-0">Последни съобщения</h6>
			@foreach (var message in Model)
			{
				if (message.Receiver == user.Email)
				{
					@* <style>
			.media{
			background-color: #808080;
			}
			</style> *@
					<div class="media text-muted border-bottom pt-3 search">
						<p class="media-body mb-0 pb-2 small lh-125 border-gray ">
							@if (@message.Sender == user.Email)
							{
								<strong class="d-block text-gray-dark">От: Мен</strong>
								<!-- Button to view message text -->
								<button type="button" class="btn btn-info btn-sm view-message">View Message</button>
							}
							else
							{
								<strong class="d-block text-gray-dark">От: @message.Sender</strong>
								<!-- Button to view message text -->
								<button type="button" class="btn btn-info btn-sm view-message">View Message</button>
							}
							<!-- Button to view message text -->
						</p>
						<div class="media-body pb-1">
							<span class="text">@message.Text</span>
							<form asp-action="Delete" asp-route-id="@message.Id" method="post"
								  onsubmit="return confirm('Are you sure you want to delete this movie?');">
								<button class="btn btn-danger btn-sm delete-message" type="submit">Изтрии</button>
							</form>
						</div>
						@* <form asp-action="MarkAsRead" asp-route-id="@message.Id" method="post">
				<button type="submit" class="btn btn-sm btn-outline-secondary">Прочети</button>
				</form> *@
					</div>
				}
				else
				{
					<div class="media text-muted bg-white border-bottom pt-3 search">
						<p class="media-body mb-0 small pb-2 lh-125 border-gray ">
							<strong class="d-block text-gray-dark">От: @message.Receiver</strong>
							<!-- Button to view message text -->
							<button type="button" class="btn btn-info btn-sm view-message">View Message</button>
						</p>
						<div class="media-body pb-1">
							<span class="text">@message.Text</span>
							<form asp-action="Delete" asp-route-id="@message.Id" method="post"
								  onsubmit="return confirm('Are you sure you want to delete this movie?');">
								<button class="btn btn-danger btn-sm delete-message" type="submit">Изтрии</button>
							</form>
						</div>
					</div>

				}
			}
			<small class="d-block text-right mt-3">
				<a href="#">All messages</a>
			</small>
		</div>
	</main>
	<a asp-action="Add" asp-controller="Messages" class="btn btn-success mb-3">
		Add New Message
	</a>
	<div>
		<nav aria-label="Page navigation">
			<ul class="pagination">
				<li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
					<a class="page-link" asp-action="Index" asp-controller="StudyMaterials"
					   asp-route-pageNumber="1" asp-route-pageSize="@ViewBag.PageSize">First</a>
				</li>
				<li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
					<a class="page-link" asp-action="Index" asp-controller="Messages"
					   asp-route-pageNumber="@(ViewBag.CurrentPage - 1)" asp-route-pageSize="@ViewBag.PageSize">Previous</a>
				</li>
				<li class="page-item">
					<a class="page-link">Page @(ViewBag.CurrentPage) of @(ViewBag.TotalPages)</a>
				</li>
				<li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
					<a class="page-link" asp-action="Index" asp-controller="Messages"
					   asp-route-pageNumber="@(ViewBag.CurrentPage + 1)" asp-route-pageSize="@ViewBag.PageSize">Next</a>
				</li>
				<li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
					<a class="page-link" asp-action="Index" asp-controller="Messages"
					   asp-route-pageNumber="@ViewBag.TotalPages" asp-route-pageSize="@ViewBag.PageSize">Last</a>
				</li>
			</ul>
		</nav>
	</div>
</body>
</html>
<script>
	const searchInput = document.getElementById("searchInput");
	searchInput.addEventListener("input", function () {
		searchMessages(this);
	});

	function searchMessages(inputEl) {
		const query = inputEl.value.toLowerCase();
		const textEls = document.getElementsByClassName("text");
		const textElsDivs = document.getElementsByClassName("search");

		for (let i = 0; i < textEls.length; i++) {
			const el = textEls[i];
			const elText = el.innerText.toLowerCase();

			if (elText.includes(query)) {
				textElsDivs[i].style.display = "block";
				el.innerHTML = elText.replace(new RegExp(query, 'ig'), '<b style="color: black">$&</b>')
			} else {
				textElsDivs[i].style.display = "none";
			}
		}
	}
</script>


